import java.util.*;

class Solution {
    public int solution(int[] priorities, int location) {
        int answer = 0;
        
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        Queue<Integer> queue = new LinkedList<>();
        
        for (int priority : priorities) {
            pq.add(priority);
            queue.add(priority);
        }
        
        while (!queue.isEmpty()) {
            int currentPriority = queue.poll();
            int maxPriority = pq.peek();
            
            if (currentPriority < maxPriority) {
                queue.add(currentPriority);
                if (location == 0) {
                    location = queue.size() - 1;
                } else {
                    location--;
                }
            } else {
                pq.poll();
                answer++;
                if (location == 0) {
                    break;
                }
                location--;
            }
        }
        
        return answer;
    }
}
