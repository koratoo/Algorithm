package BeakJoon;

import java.util.Scanner;

public class _2606_DFS {
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int M = sc.nextInt();
		int graph[][] = new int[N+1][N+1];
		for(int i=0; i<M;i++) {
			int n = sc.nextInt();
			int m = sc.nextInt();
			graph[n][m] = 1;
			graph[m][n] = 1;
		}
		boolean visited[] = new boolean[N+1];
		int start=1;
			dfs(graph,visited,start);
		
		int answer=0;
		for(int i=1;i<=N;i++) {
			if(visited[i]==true) {
				answer++;
			}
		}
		System.out.println(answer-1);
	}
	
	public static void dfs(int graph[][],boolean visited[],int cur) {
		
		visited[cur] = true;
		for(int i=1;i<visited.length;i++) {
			if(graph[cur][i]==1 && !visited[i]) {
				dfs(graph,visited,i);
			}
		}
	}
}
