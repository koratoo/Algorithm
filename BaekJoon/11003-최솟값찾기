package BeakJoon;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Deque;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class _11003 {

	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int L = Integer.parseInt(st.nextToken());
	
		int[] arr = new int[N];
		st = new StringTokenizer(br.readLine());
		for(int i=0;i<N;i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}
		
		Deque<Integer> deque = new LinkedList<>();
		for(int i=0;i<N;i++) {
			//새로추가하려는 값보다 기존에 있던 값이 크다면 기존의 값은 필요없어짐
			while(!deque.isEmpty() && arr[deque.peekLast()]>arr[i]) {
				deque.pollLast();
			}
			deque.offerLast(i);
			
			if(deque.peekFirst()<=i-L) {
				deque.pollFirst();
			}
			
			bw.write(arr[deque.peekFirst()]+" ");
		}
		bw.flush();
		bw.close();
	}
	
}
