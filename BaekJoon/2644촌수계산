package BeakJoon;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Scanner;

public class _2644_촌수계산 {
	
	static List<Queue<Integer>> list;
	static int n,p1,p2,level;
	static boolean[] visited;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		p1 = sc.nextInt();
		p2 = sc.nextInt();
		int cnt = sc.nextInt();
		
		visited = new boolean[n+1];
		
		list = new ArrayList<>();
		for(int i=0;i<=n;i++) {
			list.add(new LinkedList<>());
		}
		for(int i=0;i<cnt;i++) {
			int parent = sc.nextInt();
			int child = sc.nextInt();
			list.get(parent).add(child);
			list.get(child).add(parent);
		}
		
		int result = chonsu();
		System.out.println(result);
	}
	
	public static int chonsu() {
		Queue<Integer> queue = new LinkedList<>();
		
		queue.offer(p1);
		visited[p1] = true;
		
		level = 0;
		
		while(!queue.isEmpty()) {
			int size = queue.size();
			
			for(int i=0; i<size;i++) {
				int cur = queue.poll();
				
				if(cur == p2) {
					return level;
				}
				
				for(int child : list.get(cur)) {
					if(visited[child]) continue; 
						queue.offer(child);
						visited[child] = true;
					
				}
			}
			
			level++;
		}
		return -1;
		
	}
	
}
